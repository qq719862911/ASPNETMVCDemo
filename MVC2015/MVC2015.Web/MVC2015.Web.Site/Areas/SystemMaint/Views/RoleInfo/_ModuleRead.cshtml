@using MVC2015.Web;
@using MVC2015.Utility.Resource;
@using VM = MVC2015.Web.Model.SystemMaint.Module;
@model List<VM.ModuleItem>

@{
    int rows = 0;
    int cols = 0;
    VM.ModuleItem ModulePermission = ViewData["ModulePermission"] as VM.ModuleItem;
    ViewData["ModulePermissionIndex"] = 0;
    ViewData["ModulePermissionCount"] = 0;
    ViewBag.ModulePermissionIndex = 0;
    ViewBag.ModulePermissionCount = 0;
}
<style>
    .role-table {
        border-collapse: collapse;
        width: 100%;
    }

        .role-table td {
            border: 1px solid #CFCFCF;
            padding: 5px 5px;
            margin: 0px 0px;
        }
</style>

<table class="role-table">
    <tbody>
        @foreach (VM.ModuleItem item in Model)
        {
            rows = 1;
            cols = 3;
            @Html.Raw("<tr>")
            if (item.ChildModuleItems != null && item.ChildModuleItems.Count > 0)
            {
                rows = 0;
                cols = 1;
                foreach (VM.ModuleItem childItem in item.ChildModuleItems)
                {
                    rows += (childItem.ChildModuleItems != null && childItem.ChildModuleItems.Count > 0) ? childItem.ChildModuleItems.Count : 1;
                }
            }
            @*first col*@
        <td rowspan="@rows" colspan="@cols" style="width:12%">@ResourceHelper.GetValue(item.ResourceKey)</td>
            if (item.ChildModuleItems != null && item.ChildModuleItems.Count > 0)
            {
                for (int i = 0; i < item.ChildModuleItems.Count; i++)
                {
                    if (i > 0)
                    {
                        @Html.Raw("<tr>")
                    }

                    if (item.ChildModuleItems[i].ChildModuleItems != null && item.ChildModuleItems[i].ChildModuleItems.Count > 0)
                    {
                        <td rowspan="@item.ChildModuleItems[i].ChildModuleItems.Count" style="width:17%">@ResourceHelper.GetValue(item.ChildModuleItems[i].ResourceKey)</td>
                        for (int j = 0; j < item.ChildModuleItems[i].ChildModuleItems.Count; j++)
                        {
                            ViewBag.ModulePermissionCount = 0;
                            if (item.ChildModuleItems[i].ChildModuleItems[j].ModulePermissions != null && item.ChildModuleItems[i].ChildModuleItems[j].ModulePermissions.Count > 0)
                            {
                                ViewBag.ModulePermissionIndex = ModulePermission.ModulePermissions.IndexOf(item.ChildModuleItems[i].ChildModuleItems[j].ModulePermissions[0]);
                                ViewBag.ModulePermissionCount = item.ChildModuleItems[i].ChildModuleItems[j].ModulePermissions.Count;
                            }

                            if (j > 0)
                            {
                                @Html.Raw("<tr>")
                            }
                            <td style="width:17%">@ResourceHelper.GetValue(item.ChildModuleItems[i].ChildModuleItems[j].ResourceKey)</td>
                            @Html.Partial("_ModulePermissionRead", ModulePermission)
                            @Html.Raw("</tr>")
                        }
                    }
                    else
                    {
                        ViewBag.ModulePermissionCount = 0;
                        if (item.ChildModuleItems[i].ModulePermissions != null && item.ChildModuleItems[i].ModulePermissions.Count > 0)
                        {
                            ViewBag.ModulePermissionIndex = ModulePermission.ModulePermissions.IndexOf(item.ChildModuleItems[i].ModulePermissions[0]);
                            ViewBag.ModulePermissionCount = item.ChildModuleItems[i].ModulePermissions.Count;
                        }

                        <td colspan="2">@ResourceHelper.GetValue(item.ChildModuleItems[i].ResourceKey)</td>
                        @Html.Partial("_ModulePermissionRead", ModulePermission)
                        @Html.Raw("</tr>")
                    }
                }
            }
            else
            {
                ViewBag.ModulePermissionCount = 0;
                if (item.ModulePermissions != null && item.ModulePermissions.Count > 0)
                {
                    ViewBag.ModulePermissionIndex = ModulePermission.ModulePermissions.IndexOf(item.ModulePermissions[0]);
                    ViewBag.ModulePermissionCount = item.ModulePermissions.Count;
                }
                @Html.Partial("_ModulePermissionRead", ModulePermission)
                @Html.Raw("</tr>")
            }
        }
        </tbody>
    </table>
