@using System.Web.UI.WebControls;
@using MVC2015.Web;
@using MVC2015.Web.Model.Common;
@using MVC2015.Web.Model.KeyValue;
@using MVC2015.Utility.Resource;
@using MVC2015.Web.Site.Common;
@{
    string datetimeFormate = ViewBag.DisplayDate;
    List<TextValue> selectList = UserStatus.GetList();
    DevexpressGridViewSettings gridSettings = new DevexpressGridViewSettings("gvUserInfo");
    var settings = gridSettings.Settings();
    settings.KeyFieldName = "UserID";
    settings.CallbackRouteValues = new { Controller = "UserInfo", Action = "GridView" };
    settings.ClientSideEvents.BeginCallback = "OnBeginCallback";


    settings.Columns.Add("UserName", ResourceHelper.GetValue("SM_UserInfo_UserName")).Width = Unit.Percentage(15);
    settings.Columns.Add("LogonName", ResourceHelper.GetValue("SM_UserInfo_LogonName")).Width = Unit.Percentage(15);
    settings.Columns.Add(column =>
    {
        column.FieldName = "RoleName";
        column.Caption = ResourceHelper.GetValue("SM_UserInfo_RoleName");
        column.Width = Unit.Percentage(15);
    });
    //settings.Columns.Add("", "用户角色").Width = Unit.Percentage(20);
    //settings.Columns.Add("", "所属气站").Width = Unit.Percentage(7);
    //用户状态
    MVCxGridViewColumn colStatus = new MVCxGridViewColumn();
    colStatus.FieldName = "Status";
    colStatus.Settings.AllowSort = DefaultBoolean.False;
    colStatus.Caption = ResourceHelper.GetValue("SM_UserInfo_UserStatus");
    colStatus.Width = Unit.Percentage(5);
    colStatus.ColumnType = MVCxGridViewColumnType.ComboBox;

    var cmbStatus = colStatus.PropertiesEdit as ComboBoxProperties;
    cmbStatus.DataSource = selectList;
    cmbStatus.TextField = "Text";
    cmbStatus.ValueField = "strValue";
    cmbStatus.ValueType = typeof(EnumUserStatus);
    cmbStatus.DropDownStyle = DropDownStyle.DropDown;
    colStatus.SetDataItemTemplateContent(c =>
    {
        TextValue item = new TextValue();
        var id = (EnumUserStatus)DataBinder.Eval(c.DataItem, "Status");
        item.strValue = id.ToString();
        item.Text = null;
        if (!string.IsNullOrEmpty(item.strValue))
            item = UserStatus.GetModel(Convert.ToInt32(id));
        ViewContext.Writer.Write(item.Text);
    });
    settings.Columns.Insert(3, colStatus);

    //创建时间
    MVCxGridViewColumn colCreateDate = new MVCxGridViewColumn();
    colCreateDate.ColumnType = MVCxGridViewColumnType.DateEdit;
    colCreateDate.PropertiesEdit.DisplayFormatString = datetimeFormate;
    colCreateDate.FieldName = "CreatedDate";
    colCreateDate.Caption = ResourceHelper.GetValue("SM_UserInfo_CreatedDate");
    colCreateDate.Width = Unit.Percentage(15);
    colCreateDate.CellStyle.HorizontalAlign = HorizontalAlign.Center;
    DateEditProperties requestDateStrprops = colCreateDate.PropertiesEdit as DateEditProperties;
    requestDateStrprops.EditFormatString = datetimeFormate;
    settings.Columns.Insert(4, colCreateDate);
    //操作
    bool hasEdit = PermissionHelper.CheckPermission("SystemMaint", "UserInfo", "Edit");
    bool hasDelete = PermissionHelper.CheckPermission("SystemMaint", "UserInfo", "Delete");
    bool hasResetPassword = PermissionHelper.CheckPermission("SystemMaint", "UserInfo", "ResetPassword");
    settings.Columns.Add(column =>
    {
        column.FieldName = "UserID";
        column.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
        column.Caption = ResourceHelper.GetValue("Common_PageList_Action");
        column.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        column.Width = Unit.Percentage(10);
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.SetDataItemTemplateContent(c =>
        {
            int Id = (int)DataBinder.Eval(c.DataItem, "UserID");
            string LogonName = (string)DataBinder.Eval(c.DataItem, "LogonName");

            //明细
            ViewContext.Writer.Write(
            Html.ActionLink(" ", "", "",
            new
            {
                id = Id
            },
            new { onclick = "showDetail('" + Id + "'); return false;", @class = "grid-btn2", style = "margin-left:5px;color: transparent;background-image:url('" + Url.Content("~/Images/Icon/g-detail.png") + "');", title = ResourceHelper.GetValue("Common_Page_Detail") })
             );

            //修改
            if (true)//(hasEdit)
            {
                ViewContext.Writer.Write(
                Html.ActionLink(" ", "", "",
                new
                {
                    id = Id
                },
                new { onclick = "showEditDialog('" + Id + "'); return false;", @class = "grid-btn2", style = "margin-left:5px;color: transparent;background-image:url('" + Url.Content("~/Images/Icon/g-edit.png") + "');", title = ResourceHelper.GetValue("Common_Page_Edit") })
                 );
            }
            
            //重置密码
            if (true)
            {
                ViewContext.Writer.Write(
                    Html.ActionLink(" ", "", "",
                    new
                    {
                        id = Id
                    },
                    new { onclick = "ResetPassword('" + Id + "','" + LogonName + "'); return false;", @class = "grid-btn2", style = "margin-left:5px;color: transparent;background-size: cover;background-image:url('" + Url.Content("~/Images/Icon/g-reset.png") + "');", title = ResourceHelper.GetValue("Common_Page_ResetPassword") })
                );
            }
            
            //删除
            if (LogonName != "sysAdmin")//(hasDelete && LogonName != "sysAdmin")
            {
                ViewContext.Writer.Write(
                Html.ActionLink(" ", "", "",
                new
                {
                    id = Id
                },
                new { onclick = "deleteUser('" + Id + "','" + LogonName + "'); return false;", @class = "grid-btn2", style = "margin-left:5px;color: transparent;background-image:url('" + Url.Content("~/Images/Icon/g-delete.png") + "');", title = ResourceHelper.GetValue("Common_Page_Delete") })
                 );
            }

            
        });
    });
    var gridView1 = Html.DevExpress().GridView(settings);

}
@gridView1.BindToEF(string.Empty, string.Empty, (s, e) =>
{
    e.QueryableSource = Model;
    e.KeyExpression = "UserID";
}).GetHtml()
@Html.ScriptBlock(
    @<script type="text/javascript">

    function deleteUser(Id,Name) {
        var url="@Url.Action("Delete", "UserInfo")"+"?id="+Id;
        commonDelete("@ResourceHelper.GetValue("Message_Common_ConfirmDeletion")".replace("{0}", "@ResourceHelper.GetValue("SM_UserInfo")"+"\"" + Name + "\""), url, function (message) {
            gvUserInfo.Refresh();
            @*if (message.toString() != "true") {
                Messenger.showError(message);
            } else {
                Messenger.showSuccess("@ResourceHelper.GetValue("Message_Common_DeleteSuccessful")");
            }*@
            if (message.toString() != "true") {
                if (message == "own") {
                    //Messenger.showError("不能对自己的账户进行删除");
                    Messenger.showError("@ResourceHelper.GetValue("SMM_UserInfo_CannotDeleteOwn")");
                } else {
                    Messenger.showError(message);
                }
            } else {
                Messenger.showSuccess("@ResourceHelper.GetValue("Message_Common_DeleteSuccessful")");
            }
        });
    }

    function ResetPassword(Id, Name) {
        var url="@Url.Action("ResetPassword", "UserInfo")"+"?id="+Id;
        commonDelete("@ResourceHelper.GetValue("Message_Common_ConfirmResetPassword")" + Name + "@ResourceHelper.GetValue("SM_UserInfo_Password")" + "?", url, function (message) {
            if (message==true) {
                gvUserInfo.Refresh();
                Messenger.showSuccess("@ResourceHelper.GetValue("Message_Common_ResetPasswordSuccessful")");
            } else {
                Messenger.showError("@ResourceHelper.GetValue("SM_UserInfo_UserStatusNot")");
            }
        });
    }

    function showDetail(id) {
        showModal("#normal-modal", "@ResourceHelper.GetValue("SM_UserInfo_Detail_Title")", "@Url.Action("GetDetail", "UserInfo")?id=" + id);
    }


    function showEditDialog(id) {
        location.href = "@Url.Action("Edit", "UserInfo")" + "?id=" + id;
    }
</script>

    )